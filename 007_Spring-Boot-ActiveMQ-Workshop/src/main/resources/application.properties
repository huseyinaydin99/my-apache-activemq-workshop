# ActiveMQ Ayarlamaları
spring.activemq.broker-url = tcp://localhost:61616
spring.activemq.user = admin
spring.activemq.password = admin
spring.activemq.pool.enabled = true
spring.activemq.pool.max-connections = 50

#Tomcat Server Erişim Logları Ayarlamaları
#server.tomcat.accesslog.enabled = true
#server.tomcat.accesslog.directory = logs
#server.tomcat.accesslog.file-date-format = yyyy-MM-dd
#server.tomcat.accesslog.prefix = access_log
#server.tomcat.accesslog.suffix = .log

# Loglamalar loglarim.log dosyasında tutulacaktır.
logging.file = loglarim.log
# Loglama bilgi seviyesinde olarak ayarlandı.
logging.level.org.springframework = INFO

# Actuator Ayarlaması
management.endpoint.health.show-details = always

# DataSource(Veri Kaynağı) Ayarlamaları
# Veritabanı bağlantısı ayarlamaları bu kısımda yapılmıştır.
spring.datasource.url = jdbc:mysql://localhost:3306/huseyinaydin_activemq-db?createDatabaseIfNotExist=true
spring.datasource.username = root
spring.datasource.password = toor
spring.datasource.driver-class-name = com.mysql.jdbc.Driver
# Uygulama uzun süre boşta kalırsa bağlantının durmasını sağlar. Connection kopmaz.
spring.datasource.testWhileIdle = true
spring.datasource.validationQuery = SELECT 1

# JPA / HIBERNATE Ayarlamaları
# SQL sorguları çalıştıkça console'da gözükmesi içindir. true gözükür false gözükmez gizlenir.
spring.jpa.show-sql = true
# Uygulama her yeniden başladığında veritabanı silinip(drop edilip) yeniden create(oluşturulur) edilir.
spring.jpa.hibernate.ddl-auto = create-drop
# İsimlendirme stratejisi.
spring.jpa.hibernate.naming.implicit-strategy = org.hibernate.boot.model.naming.ImplicitNamingStrategyLegacyHbmImpl
spring.jpa.hibernate.naming.physical-strategy = org.springframework.boot.orm.jpa.hibernate.SpringPhysicalNamingStrategy
# MySQL'e bağlanacağımızı belirttik bu sayede Hibernate hangi veritabanı ile konuşacağını(diyalog kuracağını) bilir ve ona göre davranır.
spring.jpa.properties.hibernate.dialect = org.hibernate.dialect.MySQL5Dialect